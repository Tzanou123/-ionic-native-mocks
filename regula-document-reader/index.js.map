{"version":3,"sources":["../../../src/@ionic-native-mocks/plugins/regula-document-reader/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,oBAAoB,EAAE,MAAM,sCAAsC,CAAC;AAE5E;IAA+C,4CAAoB;IAAnE;;IAgBA,CAAC;IAfG;;;OAGG;IACH,6CAAU,GAAV,UAAW,OAAY,IAAS,CAAC;IAAA,CAAC;IAClC;;;OAGG;IACH,+CAAY,GAAZ;QACI,IAAI,QAAQ,GAAkB,CAAC,EAAE,CAAC,CAAC;QACnC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,CAAC,QAAQ,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACN,+BAAC;AAAD,CAhBA,AAgBC,CAhB8C,oBAAoB,GAgBlE","file":"index.js","sourceRoot":"","sourcesContent":["import { RegulaDocumentReader } from '@ionic-native/regula-document-reader';\r\n\r\nexport  class RegulaDocumentReaderMock extends RegulaDocumentReader {\r\n    /**\r\n     * Initialize the scanner\r\n     * @param license {any} License data\r\n     */\r\n    initReader(license: any): void {};\r\n    /**\r\n     * Run the scanner\r\n     * @return {Promise<string[]>} Returns a promise that resolves when results was got, and fails when not\r\n     */\r\n    scanDocument(): Promise<string[]> {\r\n        let response: Array<string> = [''];\r\n        return new Promise((resolve, reject) => {\r\n            resolve(response);\r\n        });\r\n    };\r\n}\r\n"]}